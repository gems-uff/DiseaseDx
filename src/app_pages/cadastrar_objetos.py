from sqlalchemy import select
from sqlalchemy.orm import Session, joinedload, selectin_polymorphic, subqueryload, selectinload
from sqlalchemy import create_engine
from db_config import DatabaseConfig
from models import Doenca, Diagnostico, Or, And, AoMenos, Sintoma, Manifestacao, RegiaoComposta, RegiaoDoCorpo, Orgao, Exame, Resultado, Expressao, FatosSintomaResultado, AvaliaNode, Flyweight, FlyweightFactory
from utils import StreamlitQueries
import streamlit as st


st.set_page_config(layout="wide", page_icon="üé≤")
st.title("Cadastrar Dados")
sq = StreamlitQueries()


tab_names = ["Manifesta√ß√£o", "Org√£o", "Regi√£o Composta", "Exame", "Resultado", "Sintoma", "Doen√ßa", "Or", "And", "Ao Menos", "Diagn√≥stico"]
tabs = {}
created_tabs = st.tabs(tab_names)


for tab_name, tab in zip(tab_names, created_tabs):
    tabs[tab_name] = tab


with tabs["Manifesta√ß√£o"]:
    manifestacoes = sq.get_all_manifestacoes()
    st.selectbox("Busque manifesta√ß√µes j√° existentes", options=manifestacoes, placeholder="Digite o nome de uma manifesta√ß√£o")
    text_input = st.text_input("Nome da nova Manifesta√ß√£o", placeholder="e.g.: Coceira, Irrita√ß√£o, Dor, Incha√ßo...")
    if text_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Manifesta√ß√£o '{text_input}' cadastrada com sucesso!")


with tabs["Org√£o"]:
    orgaos = sq.get_all_orgaos()
    st.selectbox("Busque √≥rg√£os j√° existentes", options=orgaos, placeholder="Digite o nome de um √≥rg√£o")
    text_input = st.text_input("Nome do novo √ìrg√£o", placeholder="e.g.: Cora√ß√£o, Pulm√£o, F√≠gado...")
    if text_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"√ìrg√£o '{text_input}' cadastrado com sucesso!")


with tabs["Regi√£o Composta"]:
    regioes_compostas = sq.get_all_regioes_compostas()
    st.selectbox("Busque regi√µes compostas j√° existentes", options=regioes_compostas, placeholder="Digite o nome de uma regi√£o composta")
    text_input = st.text_input("Nome da nova Regi√£o Composta", placeholder="e.g.: Corpo, Abdome, T√≥rax...")
    if text_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Regi√£o Composta '{text_input}' cadastrada com sucesso!")


with tabs["Exame"]:
    exames = sq.get_all_exames()
    st.selectbox("Busque exames j√° existentes", options=exames, placeholder="Digite o nome de um exame")
    text_input = st.text_input("Nome do novo Exame", placeholder="e.g.: Hemograma, Raio-X, Tomografia...")
    if text_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Exame '{text_input}' cadastrado com sucesso!")


with tabs["Resultado"]:
    resultados = sq.get_all_resultados()
    st.selectbox("Busque resultados j√° existentes", options=resultados, placeholder="Digite o nome de um resultado")
    text_input = st.text_input("Nome do novo Resultado", placeholder="e.g.: Normal, Alterado, Positivo, Negativo...")
    if text_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Resultado '{text_input}' cadastrado com sucesso!")


with tabs["Sintoma"]:
    sintomas = sq.get_all_sintomas()
    sintoma = st.selectbox("Busque Sintomas j√° existentes", options=sintomas, placeholder="Digite o nome de um Sintoma")
    col1, col2 = st.columns(2)
    with col1:
        manifestacao_input = st.text_input("Nome da Manifesta√ß√£o do novo Sintoma", placeholder="e.g.: Coceira, Irrita√ß√£o, Dor, Incha√ßo...")
    with col2:
        regiao_composta_input = st.text_input("Nome da Regi√£o Composta do novo Sintoma", placeholder="e.g.: Corpo, Abdome, T√≥rax...")
    if manifestacao_input and regiao_composta_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Sintoma '{manifestacao_input} no(a) {regiao_composta_input}' cadastrado com sucesso!")


with tabs["Doen√ßa"]:
    doencas = sq.get_all_doencas()
    doenca = st.selectbox("Busque Doen√ßas j√° existentes", options=doencas, placeholder="Digite o nome de uma Doen√ßa")
    text_input = st.text_input("Nome da nova Doen√ßa", placeholder="e.g.: Familial Mediterranean Fever, Mevalonate Kinase Deficiency...")
    if text_input:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Doen√ßa '{text_input}' cadastrada com sucesso!")


with tabs["Or"]:
    expressions = sq.get_all_expressions()
    col1, col2 = st.columns(2)
    with col1:
        or_left_expr = st.selectbox("Busque express√µes j√° existentes", options=expressions, placeholder="Digite um peda√ßo da express√£o Or", key="or_left")
    with col2:
        or_right_expr = st.selectbox("Busque express√µes j√° existentes", options=expressions, placeholder="Digite um peda√ßo da express√£o Or", key="or_right")
    if or_left_expr and or_right_expr:
        if st.button("Cadastrar", type="primary"):
            st.success(f"Express√£o: '{or_left_expr}' OR '{or_right_expr}' cadastrada com sucesso!")